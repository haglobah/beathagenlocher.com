---
import { render } from "astro:content";
import Layout from "../layouts/Layout.astro";

import Il from "../components/InnerLink.astro";
import BadgeSelection from "../components/BadgeSelection.astro";
import WideCard from "../components/WideCard.astro";
import StreamCard from "../components/StreamCard.astro";
import ClampWrapper from "../components/ClampWrapper.astro";

import Notes from '../content/notes.astro'
import Knowledge from '../content/knowledge.astro'
import {
  allTheContent,
  publishedNotes, draftNotes,
  publishedKnowledge, draftKnowledge,
  publishedEssays, draftEssays,
  publishedTalks, draftTalks,
  stream,
  sortByUpdated, sortByStartDate,
  getTopics
} from '../content/content.ts'

const topics = getTopics(allTheContent)

const renderedStream = await Promise.all(
  sortByStartDate(stream).map(async (streamlet: CollectionEntry<"stream">) => {
    const { Content } = await render(streamlet);
    return { ...streamlet, Content };
  }),
);

import { components } from '../components/mdxcomponents.ts'

---

<Layout title="Beat Hagenlochers Digital Garden">
  <div class="f-my-lg f-mx-md">
    <div class="f-py-lg">
      <h1 class="f-text-3xl leading-snug">
        <Il href="me">Beat Hagenlocher</Il> <br> thinking out loud.
      </h1>
      <ClampWrapper clampHeight="250">
        <BadgeSelection size="f-text-sm" topics={topics}/>
      </ClampWrapper>
    </div>
    <div class="md:grid md:grid-cols-12 f-gap-xl">
      <div class="md:col-span-7 *:sm:grid-cols-2">

        <div class="f-mt-md f-mb-2xl">
          <h2 class="f-text-sm f-pb-4-8 uppercase tracking-[0.17em]">
            <Il href="notes" class="font-bold">Notes</Il>
          </h2>
          <p class="italic f-text-xs">
            Loose thoughts still getting formed
          </p>
        </div>
        <Notes />

        <div class="f-mt-md f-mb-2xl">
          <h2 class="f-text-sm f-pb-4-8 uppercase tracking-[0.17em]">
            <Il href="knowledge" class="font-bold">Knowledge Bits</Il>
          </h2>
          <p class="italic f-text-xs">
            What you always wanted to know
          </p>
        </div>
        <Knowledge />

        <div class="f-mt-md f-mb-2xl">
          <h2 class="f-text-sm font-bold f-pb-4-8 uppercase tracking-[0.17em]">
            The Stream
          </h2>
          <p class="italic f-text-xs">
            Tiny pieces of thinking, links and knowledge, streamified
          </p>
        </div>
        <div class="f-mb-2xl">
          {renderedStream.map((streamlet) => (
          <div class="content-item" data-topics={JSON.stringify(streamlet.data.topics)}>
            <StreamCard title={streamlet.data.title}
                        topics={streamlet.data.topics}
                        date={streamlet.data.startDate}
            ><streamlet.Content components={components} /></StreamCard>
          </div>
          ))}
        </div>
      </div>

      <div class="md:col-span-5">
        <div class="f-mt-md f-mb-2xl">
          <h2 class="f-text-sm font-bold f-pb-4-8 uppercase tracking-[0.17em]">
            Atomic Essays
          </h2>
          <p class="italic f-text-xs">
            Short form writing capturing a single idea
          </p>
        </div>
        {sortByUpdated(publishedEssays).map((content) => (
        <div class="content-item" data-topics={JSON.stringify(content.data.topics)}>
          <WideCard to={content.id}
                    title={content.data.title}
                    topics={content.data.topics}
          >{content.data.description}</WideCard>
        </div>
        ))}
        {sortByUpdated(draftEssays).map((content) => (
        <div class="content-item opacity-50" data-topics={JSON.stringify(content.data.topics)}>
          <WideCard to={content.id}
                    title={content.data.title}
                    topics={content.data.topics}
          >{content.data.description}</WideCard>
        </div>
        ))}
      </div>

      <div class="col-span-12">
        <h2 class="f-text-sm font-bold f-pb-4-8 uppercase tracking-[0.17em] f-my-md">
          Talks
        </h2>
        {sortByUpdated(publishedTalks).map((content) => (
        <div class="content-item" data-topics={JSON.stringify(content.data.topics)}>
          <WideCard to={content.id}
                    title={content.data.title}
                    topics={content.data.topics}
          >{content.data.description}</WideCard>
        </div>
        ))}
        {sortByUpdated(draftTalks).map((content) => (
        <div class="content-item opacity-50" data-topics={JSON.stringify(content.data.topics)}>
          <WideCard to={content.id}
                    title={content.data.title}
                    topics={content.data.topics}
          >{content.data.description}</WideCard>
        </div>
        ))}
      </div>
    </div>
  </div>
</Layout>

<script>
 import runInteraction from '../components/badgeSelectionInteraction.js'

 runInteraction()
</script>
