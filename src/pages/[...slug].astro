---
import { getCollection, type CollectionEntry } from "astro:content";
import { render } from "astro:content";

import Layout from "../layouts/Layout.astro";
import PostLayout from "../layouts/PostLayout.astro";

type ContentType = "essay" | "note" | "talk";
type Collections = "essays" | "notes" | "talks";

interface Props {
	entry: CollectionEntry<Collections>;
	type: ContentType;
}

export async function getStaticPaths() {
	const essays = await getCollection("essays");
	const notes = await getCollection("notes");
	const talks = await getCollection("talks");

	return [
		...essays.map((entry) => ({
			params: { slug: entry.id },
			props: { entry, type: "essay" } as const,
		})),
		...notes.map((entry) => ({
			params: { slug: entry.id },
			props: { entry, type: "note" } as const,
		})),
		...talks.map((entry) => ({
			params: { slug: entry.id },
			props: { entry, type: "talk" } as const,
		})),
	];
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);

const frontmatter = entry.data;

import Ol from '../components/OuterLink.astro';
import Par from '../components/Par.astro';
import Heading from '../components/Heading.astro';
import List from '../components/List.astro';
import OrderedList from '../components/OrderedList.astro';
import ListItem from '../components/ListItem.astro';

const components = {a: Ol,
				    h1: Heading,
				    ul: List,
				    ol: OrderedList,
				    li: ListItem,
				    p: Par}
---

{
<Layout title={frontmatter.title}>
	<PostLayout frontmatter={frontmatter} headings={headings}>
		<Content components={components} />
	</PostLayout>
</Layout>
}
