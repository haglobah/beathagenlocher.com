---
import { getCollection, type CollectionEntry } from 'astro:content'
import { render } from 'astro:content'

import Layout from '../layouts/Layout.astro'
import PostLayout from '../layouts/PostLayout.astro'

type ContentType = 'essay' | 'note' | 'knowledge' | 'talk'
type Collections = 'essays' | 'notes' | 'knowledge' | 'talks'

interface Props {
  entry: CollectionEntry<Collections>
  type: ContentType
}

export async function getStaticPaths() {
  const essays = await getCollection('essays')
  const notes = await getCollection('notes')
  const knowledge = await getCollection('knowledge')
  const talks = await getCollection('talks')

  return [
    ...essays.map((entry) => ({
      params: { slug: entry.id },
      props: { entry, type: 'essay' } as const,
    })),
    ...notes.map((entry) => ({
      params: { slug: entry.id },
      props: { entry, type: 'note' } as const,
    })),
    ...knowledge.map((entry) => ({
      params: { slug: entry.id },
      props: { entry, type: 'knowledge' } as const,
    })),
    ...talks.map((entry) => ({
      params: { slug: entry.id },
      props: { entry, type: 'talk' } as const,
    })),
  ]
}

const { entry } = Astro.props
const { Content, headings } = await render(entry)

const frontmatter = entry.data

import { components } from '../components/mdxcomponents.ts'
---

{
  (
    <Layout title={frontmatter.title}>
      <PostLayout frontmatter={frontmatter} headings={headings}>
        <Content components={components} />
      </PostLayout>
    </Layout>
  )
}
