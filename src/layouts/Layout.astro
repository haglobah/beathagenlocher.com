---
import { SEO } from "astro-seo";

export interface Props {
	title?: string;
	desc?: string;
	type?: string;
	coverImage?: string;
}

const { title, desc, type, coverImage } = Astro.props;

/* const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString(); */

// Generate OG image URL
const currentPath = Astro.url.pathname;
const contentId = currentPath.split("/").filter(Boolean).join("/");

// Use localhost URL in development, production URL otherwise
const baseUrl = import.meta.env.DEV ? "http://localhost:4321" : Astro.site;

// Construct OG image URL - now just using the content ID directly
const ogImageURL = type
	? new URL(`/og/${contentId}.png`, baseUrl)
	: new URL(`/og.png`, baseUrl);

// Only add search params for non-content pages (like the homepage)
if (!type) {
	if (title) ogImageURL.searchParams.set("title", title);
	if (desc) ogImageURL.searchParams.set("description", desc);
	if (coverImage) ogImageURL.searchParams.set("coverImage", coverImage);
}

// Google Analytics type declarations
declare global {
	interface Window {
		dataLayer: any[];
		gtag: (...args: any[]) => void;
	}
}
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<link rel="stylesheet" href="/preflight.css">
		<SEO
			title={title}
			description={ desc || "Beat's digital garden filled with written thinking" }
			openGraph={{
				basic: {
				  type: "website",
				  url: Astro.url.href,
				  title: title || "Beat Hagenlocher",
				  image: ogImageURL.toString(),
				}
			}}
		>
	</head>
	<body class="font-sans font-normal bg-zinc-800 text-zinc-400 leading-relaxed antialiased selection:bg-sienna-light selection:text-zinc-700">
		<main class="mx-auto min-h-screen max-w-screen-xl f-px-md f-py-lg">
			<slot />
		</main>
	</body>
</html>
